* Generated by Xic from cell prbs_demo_jj

* From the rsfq_lib_jj, a pseudo-random bit sequencer based on
* inductorless RESQ gates.

* Set this to 0 to use TRAN ramp-up and uic instead of DCOP.
.param dcop=1

* Below,
* Level=1 selects the internal RSJ JJ model.
* Level=2 selects the example Verilog-A JJ model, if loaded (with
* the devload command).
* Level=3 selects the internal microscopic JJ model.
*
.model jjr jj(level=1 vshunt=0.5mV)

.control
run
plot ysep v(23) v(25) v(27) v(29) v(31)
.endc

.if dcop
.tran 1p 20n
.else
.tran 1p 20n uic
.endif

.options maxdata=256k
R0 47 43 100
R1 48 44 100

.if dcop
V0 vcc 0 10m
.else
V0 vcc 0 pwl 0 0 10p 10m
.endif

V1 47 0 pulse 0 50m 70p 50p 50p 100p 300p
V2 48 0 pulse 0 50m 220p 50p 50p 100p 300p
X0 18 19 20 vcc inv_jj
X1 19 clkb8 21 vcc dff_jj
X2 clk7 20 vcc buf_jj
X3 21 22 23 clk8 vcc xor_jj
X4 24 18 22 vcc split_jj
X5 23 clkb1 25 vcc dff_jj
X6 25 clk2 26 vcc dff_jj
X7 26 clkb2 27 vcc dff_jj
X8 27 clk3 28 vcc dff_jj
X9 28 clkb3 29 vcc dff_jj
X10 29 clk4 30 vcc dff_jj
X11 30 clkb4 31 vcc dff_jj
X12 31 clk5 32 vcc dff_jj
X13 32 clkb5 24 vcc dff_jj
X14 33 clk1 clk2 vcc split_jj
X15 34 clkb1 clkb2 vcc split_jj
X16 35 33 36 vcc split_jj
X17 37 34 38 vcc split_jj
X18 36 clk3 clk4 vcc split_jj
X19 38 clkb3 clkb4 vcc split_jj
X20 39 35 40 vcc split_jj
X21 41 37 42 vcc split_jj
X22 43 39 vcc dcsfq_il
X23 44 41 vcc dcsfq_il
X24 45 clk5 clk6 vcc split_jj
X25 46 clkb5 clkb6 vcc split_jj
X26 40 45 49 vcc split_jj
X27 42 46 50 vcc split_jj
X28 49 clk7 clk8 vcc split_jj
X29 50 clkb7 clkb8 vcc split_jj
.subckt split_jj in out1 out2 vbias
B0 3 0 5 jjr area=.25
B1 1 0 9 jjr area=.355
B2 4 0 11 jjr area=.25
R0 vbias 1 38
R1 vbias 3 58
R2 vbias 4 58
X0 6 3 4jj jjarea=0.3
X1 3 out1 4jj jjarea=0.5
X2 in 1 4jj jjarea=0.5
X3 1 6 4jj jjarea=0.5
X4 6 4 4jj jjarea=0.3
X5 4 out2 4jj jjarea=0.5
.ends split_jj
.subckt buf_jj in out vbias
B0 1 0 6 jjr area=.25
B1 3 0 7 jjr area=.25
R0 vbias 1 60
R1 vbias 3 60
X0 1 in 4jj jjarea=0.5
X1 1 3 4jj jjarea=0.3
X2 3 out 4jj jjarea=0.5
.ends buf_jj
.subckt inv_jj in out T vbias
B0 4 5 10 jjr area=.14
B1 2 0 11 jjr area=.25
B2 4 0 12 jjr area=.31
B3 5 14 13 jjr area=.174
B4 6 14 15 jjr area=.294
B5 7 0 16 jjr area=.355
B6 14 0 19 jjr area=.294
B7 17 0 20 jjr area=.264
R0 vbias 2 64
R1 vbias 4 47
R2 vbias 5 42
R3 vbias 6 200
R4 vbias 7 70
R5 vbias 14 200
R6 vbias 17 91
X0 in 2 4jj jjarea=0.5
X1 2 4 4jj jjarea=0.3
X2 5 6 4jj jjarea=0.18
X3 6 7 4jj jjarea=0.3
X4 7 T 4jj jjarea=0.5
X5 14 17 4jj jjarea=0.3
X6 17 out 4jj jjarea=0.5
.ends inv_jj
.subckt 4jj + - jjarea=1
B0 + 2 1 jjr area=jjarea
B1 2 5 4 jjr area=jjarea
B2 5 7 6 jjr area=jjarea
B3 7 - 8 jjr area=jjarea
.ends 4jj
.subckt dcsfq_il in out vbias
B0 4 in 7 jjr area=.225
B1 5 10 9 jjr area=.225
B2 3 12 11 jjr area=.25
LP0 10 0 0.20pH
LP1 12 0 0.11pH
LT0 4 1 0.51pH
LT1 1 5 1.09pH
LT2 5 3 4.41pH
LT3 3 out 2.12pH
LT4 in 0 3.34pH
R0 vbias 1 36
R1 vbias 3 57
.ends dcsfq_il
.subckt dff_jj Din clk out vbias
B0 2 5 6 jjr area=.15
B1 9 3 11 jjr area=.175
B2 3 0 12 jjr area=.20
B3 5 0 13 jjr area=.25
B4 7 0 14 jjr area=.20
R0 vbias 3 63
R1 vbias 5 87
R2 vbias 7 103
X0 clk 2 4jj jjarea=.5
X1 Din 9 4jj jjarea=.5
X2 3 5 4jj jjarea=.1
X3 5 7 4jj jjarea=.3
X4 7 out 4jj jjarea=.5
.ends dff_jj
.subckt xor_jj in1 in2 out clk vbias
B0 1 6 5 jjr area=.17
B1 3 8 7 jjr area=.17
B2 9 6 13 jjr area=.25
B3 12 8 14 jjr area=.25
B4 6 0 15 jjr area=.17
B5 8 0 16 jjr area=.17
B6 4 18 17 jjr area=.19
B7 19 18 22 jjr area=.18
B8 18 0 23 jjr area=.17
R0 vbias 1 115
R1 vbias 3 115
X0 4 1 4jj jjarea=0.20
X1 3 4 4jj jjarea=0.20
X2 9 in1 4jj jjarea=0.5
X3 in2 12 4jj jjarea=0.5
X4 19 clk 4jj jjarea=0.5
X5 out 18 4jj jjarea=0.25
.ends xor_jj

