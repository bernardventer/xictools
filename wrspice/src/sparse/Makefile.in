#######################################################################
LOCATION = wrspice/src/sparse
#######################################################################

SPICE_VERSION = @SPICE_VERSION@
DATE = @DATE@

CXX = @CXX@
CC = @CC@
CFLAGS = @CFLAGS_SG@ @UFLAGS@ -DWRSPICE -DUSE_KLU
DEPEND_PROG = @DEPEND_PROG@ @CFLAGS_SG@ -DWRSPICE -DUSE_KLU
AR = @AR@
RANLIB = @RANLIB@
FILTER = @FILTER@

LIB_TARGET = sparse.a

BASE = ../../../xt_base
KLU = ../../../KLU
INCLUDE = -I../../include -I$(BASE)/include \
  -I$(KLU)/AMD/Include -I$(KLU)/BTF/Include -I$(KLU)/COLAMD/Include \
  -I$(KLU)/KLU/Include -I$(KLU)/SuiteSparse_config

SP_CCFILES = spbuild.cc spfactor.cc spoutput.cc spsolve.cc sputils.cc
CCFILES = kluif.cc spspice.cc $(SP_CCFILES)
CCOBJS = $(CCFILES:.cc=.o)

$(LIB_TARGET): cptest $(CCOBJS)
	@if [ -f $(LIB_TARGET) ]; then \
	    rm -f $(LIB_TARGET); \
	fi
	$(AR) cr $(LIB_TARGET) $(CCOBJS)
	$(RANLIB) $(LIB_TARGET)

.cc.o:
	$(CXX) $(CFLAGS) $(INCLUDE) -c $*.cc

$(SP_CCFILES):
	cp -fp $(BASE)/sparse/$@ .

spbuild.cc:     $(BASE)/sparse/spbuild.cc
spfactor.cc:    $(BASE)/sparse/spfactor.cc
spoutput.cc:    $(BASE)/sparse/spoutput.cc
spsolve.cc:     $(BASE)/sparse/spsolve.cc
sputils.cc:     $(BASE)/sparse/sputils.cc

depend: $(CCFILES)
	@echo depending in $(LOCATION)
	@if [ x$(DEPEND_DONE) = x ]; then \
	    echo DEPEND_DONE = 1 >> Makefile; \
	    $(DEPEND_PROG) $(INCLUDE) $(CCFILES) $(FILTER) >> Makefile; \
	fi

clean:
	-@rm -f *.o $(LIB_TARGET) $(SP_CCFILES)

distclean: clean
	-@rm -f Makefile

# Make sure that the copies are the same as the source, avoid local
# updates that won't propagate!
cptest: $(SP_CCFILES)
	@for a in $(SP_CCFILES); do \
	    set -- $$(/usr/bin/sum $(BASE)/sparse/$$a); s1=$$1; \
	    set -- $$(/usr/bin/sum $$a); s2=$$1; \
            if [ "$$s1" != "$$s2" ]; then \
	        echo ; \
	        echo  "ERROR!!! $$a differs in $(BASE)/sparse, FIXME"; \
	        echo ; \
	        exit 1; \
	    fi; \
	done

#######################################################################
